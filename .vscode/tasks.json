{
  // See https://go.microsoft.com/fwlink/?LinkId=733558
  // for the documentation about the tasks.json format
  "version": "2.0.0",
  "tasks": [
    // PyPI build and deploy
    {
      // remove previosu bulds
      "label": "PyPIPackage - build",
      "type": "shell",
      "command": "python -m build"
    },
    {
      "label": "PyPIPackage - upload",
      "type": "shell",
      "command": "python -m twine upload --config-file .pypirc dist/*"
    },
    // Conda - package
    {
      "label": "Conda - pkgBuild",
      "type": "shell",
      "command": "./scripts/buildPkgConda.sh"
    },
    // Venv
    {
      "label": "Venv - create",
      "type": "shell",
      "command": "python -m venv ./venv"
    },
    {
      "label": "Venv - activate",
      "type": "shell",
      "command": "source ./venv/bin/activate"
    },
    // Pipenv
    {
      "label": "Pipenv - instal packages from file",
      "type": "shell",
      "command": "pipenv install"
    },
    {
      "label": "Pipenv - instal <package>",
      "type": "shell",
      "command": "pipenv install <package>"
    },
    {
      "label": "Pipenv - activate venv",
      "type": "shell",
      "command": "pipenv shell"
    },
    {
      "label": "Pipenv - run command",
      "type": "shell",
      "command": "pipenv run <command>"
    },
    {
      "label": "Dev: - script",
      "type": "shell",
      "command": "pipenv run python dev/dev_atp_dict.py"
    },

    {
      "label": "Test: all",
      "type": "shell",
      "command": "pipenv run pytest tests -xs"
    },

    {
      "label": "Test: file",
      "type": "shell",
      "command": "pipenv run pytest tests/test_atp_dict.py -x"
    },

    {
      "label": "Test: function",
      "type": "shell",
      "command": "pipenv run pytest tests/test_atp_dict.py::test_first -x"
    },
    // {
    //   "label": "Conda - pkgUpload",
    //   "type": "shell",
    //   "command": "anaconda",
    //   "args": ["upload", "./build/noarch/*-py_0.tar.bz2"],
    //   "options": {
    //     "env": {
    //       "ANACONDA_API_TOKEN": "an-e6df2241-ae6f-4470-9f70"
    //     }
    //   }
    // },
    // Conda - dev enviroement
    {
      "label": "CondaEnv - deactivate",
      "type": "shell",
      "command": "conda deactivate"
    },
    {
      "label": "Conda - localEnvUpdate",
      "type": "shell",
      "command": "conda env update --prefix ./env --file environment-dev.yml --prune"
    },
    {
      "label": "Conda - localEnvExport",
      "type": "shell",
      "command": "conda-env export --prefix ./env --file environmentExport.yml"
    },
    // Sphinx build
    {
      "label": "Sphinx - build html",
      "type": "shell",
      "command": "./scripts/sphinixBuild.sh"
    },
    {
      "label": "Sphinx - serve html port = 8081",
      "type": "shell",
      "command": "python -m http.server 8081 --directory ./sphinx/build/html/"
    },

    // git
    {
      "label": "Git - create tag",
      "type": "shell",
      "command": "git tag -a v0.0.10 -m \"Verion 0.0.10\""
    },
    {
      "label": "Git - push tags",
      "type": "shell",
      "command": "git push origin --tags"
    },
    // Linting and Formatting
    {
      "label": "lintFlake8",
      "type": "shell",
      "command": "flake8"
    },
    {
      "label": "formatBlack",
      "type": "shell",
      "command": "black ."
    },
    // Git - pre-commit
    {
      "label": "preCommit - install",
      "detail": "Install pre-commit hooks from .pre-commit-config.yaml to .git hooks.",
      "type": "shell",
      "command": "pre-commit install"
    },
    {
      "label": "preCommit - run all",
      "detail": "Run pre-commit hooks described in .pre-commit-config.yaml",
      "type": "shell",
      "command": "pre-commit run --all-files"
    },
    // Docusaurus
    {
      "type": "npm",
      "script": "start",
      "path": "website/",
      "problemMatcher": [],
      "label": "Docusaurus - dev"
    },
    {
      "type": "npm",
      "script": "build",
      "path": "website/",
      "problemMatcher": [],
      "label": "Docusaurus - build"
    },
    {
      "type": "npm",
      "script": "serve",
      "path": "website/",
      "problemMatcher": [],
      "label": "Docusaurus - serve"
    },
    // {
    //   "type": "npm",
    //   "script": "deploy",
    //   "path": "website/",
    //   "problemMatcher": [],
    //   "label": "Docusaurus - deploy"
    // },
    {
      "label": "npm: deploy - website command",
      "type": "shell",
      "command": "GIT_USER=andrazpolak DEPLOYMENT_BRANCH=gh-pages npm run deploy",
      "problemMatcher": [],
      "detail": "Deploy website to docusaurus webpage.",
      "options": {
        "cwd": "${workspaceFolder}/website/"
      }
    }
  ]
}
